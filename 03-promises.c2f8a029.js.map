{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SAE3C,IAAIC,EAAoB,KACpBC,EAAmB,KACnBC,EAAe,KAOnB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAExCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAIXR,EAAYgB,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAOF,EAAMG,OAAOC,SAGJlB,EAAFgB,EAAKX,MAAMc,MAC/BlB,EAAmBe,EAAKI,KAAKD,MAC7BjB,EAAec,EAAKK,OAAOF,MAC3B,IAAIC,EAAOE,OAAOtB,GAElBuB,QAAQC,IAAI,sBAEZ,IAAI,IAAIC,EAAI,EAAGA,GAAKvB,EAAcuB,GAAK,EAAG,CACzBtB,EAAcsB,EAAGL,GACzBM,MAAK,EAACtB,SAACA,EAAQC,MAAEA,MACxBV,EAAAgC,OAAOC,QAAQ,wBAAsBxB,WAAoBC,MAAU,IACjEwB,OAAM,EAACzB,SAACA,EAAQC,MAAEA,KACbV,EAAAgC,OAAOG,QAAQ,uBAAqB1B,WAAkBC,SAE9De,GAAQE,OAAOrB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'; //бібліотека замість alert\n\nconst promiseForm = document.querySelector('.form');\n\nlet VALUE_FIRST_DELAY = null;\nlet VALUE_DELAY_STEP = null;\nlet VALUE_AMOUNT = null;\n\nlet count = null;\n\n//-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay});\n         } else {\n      reject({position, delay});\n        }\n  }, delay);\n});}\n//-------------------------------------------------------------\n\npromiseForm.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const form = event.target.elements;\n  //можна дестриктуризувати: const {delay, step, amount} = event.target.elements;\n  \n  VALUE_FIRST_DELAY = form.delay.value;\n  VALUE_DELAY_STEP = form.step.value;\n  VALUE_AMOUNT = form.amount.value;\n  let step = Number(VALUE_FIRST_DELAY);\n\n  console.log('CLICK handleSubmit')\n\n  for(let i = 1; i <= VALUE_AMOUNT; i += 1) {\n   const promise = createPromise(i, step);\n   promise.then(({position, delay}) => {\n    Notify.success(`✅ Fulfilled promise '${position}' in - ${delay}ms`)\n   }).catch(({position, delay}) => {\n    return Notify.failure(`❌ Rejected promise '${position}' in - ${delay}ms`)\n   })\n   step += Number(VALUE_DELAY_STEP);\n  }\n}\n\n\n\n// event.target.reset();\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$promiseForm","document","querySelector","$47d4ff9957288465$var$VALUE_FIRST_DELAY","$47d4ff9957288465$var$VALUE_DELAY_STEP","$47d4ff9957288465$var$VALUE_AMOUNT","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","form","target","elements","value","step","amount","Number","console","log","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.c2f8a029.js.map"}