{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SAE3C,IAAIC,EAAoB,KACpBC,EAAmB,KACnBC,EAAe,KAEfC,EAAQ,KAGZN,EAAYO,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAOF,EAAMG,OACnBR,EAAoBO,EAAKE,SAASC,MAAMC,MACxCV,EAAmBM,EAAKE,SAASG,KAAKD,MACtCT,EAAeK,EAAKE,SAASI,OAAOF,MACpC,IAAIC,EAAOE,OAAOd,GAElBe,YAAW,KACT,MAAMC,EAAgBC,aAAY,KAGhC,GAFAd,GAAS,EAELA,EAAQD,EAKD,OAJTgB,cAAcF,GACdrB,EAAAwB,OAAOC,QAAQ,uBACGjB,EAAV,OACRkB,QAAQC,IAAI,mBAepB,IAAuBC,EAAUb,EAX3BW,QAAQC,IAAI,sCAACnB,MAWIoB,EAPHpB,EAOaO,EAPNE,EAQHY,KAAKC,SAAW,IAKpC9B,EAAAwB,OAAOO,QAAQ,uBAAqBH,SAAkBb,OACpDW,QAAMC,IAAI,wBAAsBC,WAAoBb,SAGtDf,EAAAwB,OAAOQ,QAAQ,sBAAoBJ,QAAiBb,OAClDW,QAAMC,IAAI,uBAAqBC,WAAoBb,QAhBnDE,GAAQE,OAAOb,EAAiB,GAC/BW,EAAK,GACPZ,E,IAmBkB,IAAI4B,SAAQ,CAACC,EAASC,KAC3C,MAAMC,EAAgBP,KAAKC,SAAW,GACtCV,YAAW,KACTM,QAAQC,IAAI,cAERS,EACFF,EAAQ,YAERC,EAAO,SAAS,GAEjB,IAAK,IAIPE,MAAK,EAACT,SAAEA,EAAQb,MAAEA,MACjBW,QAAQC,IAAI,2BAAyBC,UAAmBb,OAAW,IAEpEuB,OAAM,EAACV,SAAEA,EAAQb,MAAEA,MAClBW,QAAQC,IAAI,yBAAuBC,QAAiBb,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'; //бібліотека замість alert\n\nconst promiseForm = document.querySelector('.form');\n\nlet VALUE_FIRST_DELAY = null;\nlet VALUE_DELAY_STEP = null;\nlet VALUE_AMOUNT = null;\n\nlet count = null;\n\n//-------------------------------------------------------------\npromiseForm.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const form = event.target;\n  VALUE_FIRST_DELAY = form.elements.delay.value;\n  VALUE_DELAY_STEP = form.elements.step.value;\n  VALUE_AMOUNT = form.elements.amount.value;\n  let step = Number(VALUE_FIRST_DELAY);\n\n  setTimeout(() => {\n    const setIntervalId = setInterval(() => {\n      count += 1;\n\n      if (count > VALUE_AMOUNT) {\n        clearInterval(setIntervalId);\n        Notify.warning('Припиняємо інтервал');\n        count = 0;\n        console.log('ОБНУЛЯЄМО count');\n        return;\n      }\n\n      console.log(`Викликаємо функцію createPromise: '${count}'`);\n\n      //console.log('STEP::', step);\n\n      createPromise(count, step);\n\n      step += Number(VALUE_DELAY_STEP);\n    }, step);\n  }, VALUE_FIRST_DELAY);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  // console.log('POSITION:', position);\n  // console.log('DELAY:', delay);\n  if (shouldResolve) {\n    // Fulfill\n    Notify.success(`✅ Fulfilled promise ${position} in  ${delay}ms`);\n    console.log(`✅ Fulfilled promise '${position}' in - ${delay}ms`);\n  } else {\n    // Reject\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise '${position}' in - ${delay}ms`);\n  }\n}\n//--------------------------------\n\nconst createPromiseP = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    console.log('ТУТ ПРОМІС');\n\n    if (shouldResolve) {\n      resolve('Success!');\n    } else {\n      reject('Error!');\n    }\n  }, 5000);\n});\n\ncreatePromiseP\n  .then(({ position, delay }) => {\n    console.log(`✅ '2'Fulfilled promise '${position}' in '${delay}'ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ '2'Rejected promise ${position} in ${delay}ms`);\n  });\n\n//--------------------------------------\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n//---*-*-*-*-*-*-*--*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-------\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$promiseForm","document","querySelector","$47d4ff9957288465$var$VALUE_FIRST_DELAY","$47d4ff9957288465$var$VALUE_DELAY_STEP","$47d4ff9957288465$var$VALUE_AMOUNT","$47d4ff9957288465$var$count","addEventListener","event","preventDefault","form","target","elements","delay","value","step","amount","Number","setTimeout","setIntervalId","setInterval","clearInterval","Notify","warning","console","log","position","Math","random","success","failure","Promise","resolve","reject","shouldResolve","then","catch"],"version":3,"file":"03-promises.598ed3ea.js.map"}